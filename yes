// // AdminDashboard.jsx
// import React, { useState, useEffect } from 'react';
// import {
//   View,
//   Text,
//   StyleSheet,
//   ScrollView,
//   TouchableOpacity,
//   TextInput,
//   Modal,
//   Alert,
//   Dimensions,
//   StatusBar,
//   SafeAreaView,
//   FlatList
// } from 'react-native';
// import { LinearGradient } from 'expo-linear-gradient';
// import { Ionicons } from '@expo/vector-icons';

// const { width, height } = Dimensions.get('window');

// // Mock data for subscription plans
// const mockPlans = [
//   {
//     id: 'PLAN001',
//     name: 'Basic',
//     price: 4000,
//     duration: 'Monthly',
//     features: ['1 collection/week', 'Household waste', 'Basic support'],
//     color: '#10B981',
//     clients: 45
//   },
//   {
//     id: 'PLAN002',
//     name: 'Standard',
//     price: 7000,
//     duration: 'Monthly',
//     features: ['2 collections/week', 'Household + recyclable waste', 'Priority support'],
//     color: '#3B82F6',
//     clients: 78,
//     popular: true
//   },
//   {
//     id: 'PLAN003',
//     name: 'Premium',
//     price: 12000,
//     duration: 'Monthly',
//     features: ['3 collections/week', 'All waste types', '24/7 support', 'Express collection'],
//     color: '#8B5CF6',
//     clients: 32
//   }
// ];

// // Mock data for client requests
// const mockRequests = [
//   {
//     id: 'REQ001',
//     clientName: 'Marie Tchoua',
//     phone: '+237 679 123 456',
//     address: 'Mvog-Ada District, Yaoundé',
//     requestedPlan: 'Standard',
//     requestDate: '2025-09-03',
//     status: 'pending',
//     notes: 'New client, requests Tuesday and Friday collection'
//   },
//   {
//     id: 'REQ002',
//     clientName: 'Jean Paul Essomba',
//     phone: '+237 698 987 654',
//     address: 'Bastos, Yaoundé',
//     requestedPlan: 'Premium',
//     requestDate: '2025-09-02',
//     status: 'approved',
//     notes: 'VIP client, urgent collection required'
//   },
//   {
//     id: 'REQ003',
//     clientName: 'Agnes Mengue',
//     phone: '+237 677 555 123',
//     address: 'Emombo, Yaoundé',
//     requestedPlan: 'Basic',
//     requestDate: '2025-09-01',
//     status: 'rejected',
//     notes: 'Area not currently covered'
//   }
// ];

// // Mock data for collectors
// const mockCollectors = [
//   {
//     id: 'COL001',
//     name: 'Paul Mbarga',
//     phone: '+237 655 789 321',
//     vehicle: 'Truck - CAM001',
//     zone: 'City Center',
//     status: 'active',
//     clients: 25,
//     efficiency: 95
//   },
//   {
//     id: 'COL002',
//     name: 'Francis Nkomo',
//     phone: '+237 677 456 789',
//     vehicle: 'Van - CAM002',
//     zone: 'Bastos/Nlongkak',
//     status: 'active',
//     clients: 18,
//     efficiency: 88
//   },
//   {
//     id: 'COL003',
//     name: 'Martin Owono',
//     phone: '+237 698 123 456',
//     vehicle: 'Truck - CAM003',
//     zone: 'Mvog-Mbi/Emombo',
//     status: 'offline',
//     clients: 15,
//     efficiency: 92
//   }
// ];

// // Mock unassigned clients
// const mockUnassignedClients = [
//   {
//     id: 'CL005',
//     name: 'Marie Tchoua',
//     address: 'Mvog-Ada District, Yaoundé',
//     plan: 'Standard',
//     phone: '+237 679 123 456',
//     zone: 'City Center'
//   },
//   {
//     id: 'CL006',
//     name: 'Robert Manga',
//     address: 'Nkoldongo, Yaoundé',
//     plan: 'Premium',
//     phone: '+237 655 987 654',
//     zone: 'Mvog-Mbi/Emombo'
//   }
// ];

// const AdminDashboard = () => {
//   const [activeTab, setActiveTab] = useState('subscriptions');
//   const [plans, setPlans] = useState(mockPlans);
//   const [requests, setRequests] = useState(mockRequests);
//   const [collectors, setCollectors] = useState(mockCollectors);
//   const [unassignedClients, setUnassignedClients] = useState(mockUnassignedClients);
  
//   // Modal states
//   const [planModal, setPlanModal] = useState(false);
//   const [requestModal, setRequestModal] = useState(false);
//   const [assignModal, setAssignModal] = useState(false);
  
//   // Form states
//   const [selectedPlan, setSelectedPlan] = useState(null);
//   const [selectedRequest, setSelectedRequest] = useState(null);
//   const [selectedClient, setSelectedClient] = useState(null);
//   const [newPlan, setNewPlan] = useState({
//     name: '',
//     price: '',
//     duration: 'Monthly',
//     features: []
//   });
//   const [newFeature, setNewFeature] = useState('');

//   const getStatusColor = (status) => {
//     switch (status) {
//       case 'pending': return '#F59E0B';
//       case 'approved': return '#10B981';
//       case 'rejected': return '#EF4444';
//       case 'active': return '#10B981';
//       case 'offline': return '#6B7280';
//       default: return '#6B7280';
//     }
//   };

//   const getStatusText = (status) => {
//     switch (status) {
//       case 'pending': return 'Pending';
//       case 'approved': return 'Approved';
//       case 'rejected': return 'Rejected';
//       case 'active': return 'Active';
//       case 'offline': return 'Offline';
//       default: return 'Unknown';
//     }
//   };

//   // Subscription Plan Functions
//   const openPlanModal = (plan = null) => {
//     if (plan) {
//       setSelectedPlan(plan);
//       setNewPlan({
//         name: plan.name,
//         price: plan.price.toString(),
//         duration: plan.duration,
//         features: [...plan.features]
//       });
//     } else {
//       setSelectedPlan(null);
//       setNewPlan({
//         name: '',
//         price: '',
//         duration: 'Monthly',
//         features: []
//       });
//     }
//     setPlanModal(true);
//   };

//   const savePlan = () => {
//     if (!newPlan.name || !newPlan.price) {
//       Alert.alert('Error', 'Please fill all required fields');
//       return;
//     }

//     const planData = {
//       id: selectedPlan ? selectedPlan.id : `PLAN${Date.now()}`,
//       name: newPlan.name,
//       price: parseInt(newPlan.price),
//       duration: newPlan.duration,
//       features: newPlan.features,
//       color: selectedPlan ? selectedPlan.color : '#10B981',
//       clients: selectedPlan ? selectedPlan.clients : 0
//     };

//     if (selectedPlan) {
//       setPlans(plans.map(p => p.id === selectedPlan.id ? planData : p));
//     } else {
//       setPlans([...plans, planData]);
//     }

//     setPlanModal(false);
//     Alert.alert('Success', `Plan ${selectedPlan ? 'updated' : 'created'} successfully`);
//   };

//   const addFeature = () => {
//     if (newFeature.trim()) {
//       setNewPlan({
//         ...newPlan,
//         features: [...newPlan.features, newFeature.trim()]
//       });
//       setNewFeature('');
//     }
//   };

//   const removeFeature = (index) => {
//     setNewPlan({
//       ...newPlan,
//       features: newPlan.features.filter((_, i) => i !== index)
//     });
//   };

//   // Request Management Functions
//   const openRequestModal = (request) => {
//     setSelectedRequest(request);
//     setRequestModal(true);
//   };

//   const updateRequestStatus = (status) => {
//     if (!selectedRequest) return;

//     const updatedRequests = requests.map(req => {
//       if (req.id === selectedRequest.id) {
//         return { ...req, status };
//       }
//       return req;
//     });

//     setRequests(updatedRequests);
    
//     // If approved, add to unassigned clients
//     if (status === 'approved') {
//       const newClient = {
//         id: `CL${Date.now()}`,
//         name: selectedRequest.clientName,
//         address: selectedRequest.address,
//         plan: selectedRequest.requestedPlan,
//         phone: selectedRequest.phone,
//         zone: 'To be determined'
//       };
//       setUnassignedClients([...unassignedClients, newClient]);
//     }

//     setRequestModal(false);
//     Alert.alert('Success', `Request ${status === 'approved' ? 'approved' : 'rejected'}`);
//   };

//   // Collector Assignment Functions
//   const openAssignModal = (client) => {
//     setSelectedClient(client);
//     setAssignModal(true);
//   };

//   const assignCollector = (collector) => {
//     if (!selectedClient) return;

//     // Update collector's client count
//     const updatedCollectors = collectors.map(col => {
//       if (col.id === collector.id) {
//         return { ...col, clients: col.clients + 1 };
//       }
//       return col;
//     });

//     // Remove client from unassigned list
//     const updatedUnassigned = unassignedClients.filter(
//       client => client.id !== selectedClient.id
//     );

//     setCollectors(updatedCollectors);
//     setUnassignedClients(updatedUnassigned);
//     setAssignModal(false);
    
//     Alert.alert('Success', `Client assigned to ${collector.name}`);
//   };

//   const renderTabContent = () => {
//     switch (activeTab) {
//       case 'subscriptions':
//         return renderSubscriptions();
//       case 'requests':
//         return renderRequests();
//       case 'assignments':
//         return renderAssignments();
//       default:
//         return null;
//     }
//   };

//   const renderSubscriptions = () => (
//     <ScrollView style={styles.tabContent}>
//       <View style={styles.sectionHeader}>
//         <Text style={styles.sectionTitle}>Subscription Plans</Text>
//         <TouchableOpacity 
//           style={styles.addButton}
//           onPress={() => openPlanModal()}
//         >
//           <Ionicons name="add" size={20} color="#fff" />
//           <Text style={styles.addButtonText}>New Plan</Text>
//         </TouchableOpacity>
//       </View>

//       {plans.map((plan) => (
//         <View key={plan.id} style={styles.planCard}>
//           {plan.popular && (
//             <View style={styles.popularBadge}>
//               <Text style={styles.popularText}>POPULAR</Text>
//             </View>
//           )}
          
//           <View style={styles.planHeader}>
//             <View style={styles.planInfo}>
//               <Text style={styles.planName}>{plan.name}</Text>
//               <Text style={styles.planPrice}>{plan.price.toLocaleString()} FCFA</Text>
//               <Text style={styles.planDuration}>{plan.duration}</Text>
//             </View>
//             <TouchableOpacity 
//               style={styles.editButton}
//               onPress={() => openPlanModal(plan)}
//             >
//               <Ionicons name="pencil" size={16} color="#6B7280" />
//             </TouchableOpacity>
//           </View>

//           <View style={styles.planFeatures}>
//             {plan.features.map((feature, index) => (
//               <View key={index} style={styles.featureItem}>
//                 <Ionicons name="checkmark-circle" size={16} color={plan.color} />
//                 <Text style={styles.featureText}>{feature}</Text>
//               </View>
//             ))}
//           </View>

//           <View style={styles.planStats}>
//             <Text style={styles.statsText}>{plan.clients} active clients</Text>
//           </View>
//         </View>
//       ))}
//     </ScrollView>
//   );

//   const renderRequests = () => (
//     <ScrollView style={styles.tabContent}>
//       <View style={styles.sectionHeader}>
//         <Text style={styles.sectionTitle}>Client Requests</Text>
//         <View style={styles.requestStats}>
//           <Text style={styles.statsText}>
//             {requests.filter(r => r.status === 'pending').length} pending
//           </Text>
//         </View>
//       </View>

//       {requests.map((request) => (
//         <TouchableOpacity 
//           key={request.id} 
//           style={styles.requestCard}
//           onPress={() => openRequestModal(request)}
//         >
//           <View style={styles.requestHeader}>
//             <View style={styles.requestInfo}>
//               <Text style={styles.requestName}>{request.clientName}</Text>
//               <Text style={styles.requestAddress}>{request.address}</Text>
//               <Text style={styles.requestPhone}>{request.phone}</Text>
//             </View>
//             <View style={[
//               styles.requestStatus,
//               { backgroundColor: getStatusColor(request.status) }
//             ]}>
//               <Text style={styles.requestStatusText}>
//                 {getStatusText(request.status)}
//               </Text>
//             </View>
//           </View>

//           <View style={styles.requestDetails}>
//             <Text style={styles.requestPlan}>Requested Plan: {request.requestedPlan}</Text>
//             <Text style={styles.requestDate}>Date: {request.requestDate}</Text>
//             {request.notes && (
//               <Text style={styles.requestNotes}>📝 {request.notes}</Text>
//             )}
//           </View>
//         </TouchableOpacity>
//       ))}
//     </ScrollView>
//   );

//   const renderAssignments = () => (
//     <ScrollView style={styles.tabContent}>
//       {/* Collectors Section */}
//       <View style={styles.sectionHeader}>
//         <Text style={styles.sectionTitle}>Collectors</Text>
//       </View>

//       {collectors.map((collector) => (
//         <View key={collector.id} style={styles.collectorCard}>
//           <View style={styles.collectorHeader}>
//             <View style={styles.collectorInfo}>
//               <Text style={styles.collectorName}>{collector.name}</Text>
//               <Text style={styles.collectorPhone}>{collector.phone}</Text>
//               <Text style={styles.collectorVehicle}>{collector.vehicle}</Text>
//               <Text style={styles.collectorZone}>Zone: {collector.zone}</Text>
//             </View>
//             <View style={styles.collectorStats}>
//               <View style={[
//                 styles.collectorStatus,
//                 { backgroundColor: getStatusColor(collector.status) }
//               ]}>
//                 <Text style={styles.collectorStatusText}>
//                   {getStatusText(collector.status)}
//                 </Text>
//               </View>
//               <Text style={styles.collectorClients}>{collector.clients} clients</Text>
//               <Text style={styles.collectorEfficiency}>{collector.efficiency}% efficiency</Text>
//             </View>
//           </View>
//         </View>
//       ))}

//       {/* Unassigned Clients Section */}
//       <View style={styles.sectionHeader}>
//         <Text style={styles.sectionTitle}>Unassigned Clients</Text>
//         <View style={styles.unassignedStats}>
//           <Text style={styles.statsText}>
//             {unassignedClients.length} clients
//           </Text>
//         </View>
//       </View>

//       {unassignedClients.map((client) => (
//         <View key={client.id} style={styles.unassignedCard}>
//           <View style={styles.unassignedInfo}>
//             <Text style={styles.unassignedName}>{client.name}</Text>
//             <Text style={styles.unassignedAddress}>{client.address}</Text>
//             <Text style={styles.unassignedPlan}>Plan: {client.plan}</Text>
//             <Text style={styles.unassignedPhone}>{client.phone}</Text>
//           </View>
//           <TouchableOpacity 
//             style={styles.assignButton}
//             onPress={() => openAssignModal(client)}
//           >
//             <Ionicons name="person-add" size={16} color="#fff" />
//             <Text style={styles.assignButtonText}>Assign</Text>
//           </TouchableOpacity>
//         </View>
//       ))}
//     </ScrollView>
//   );

//   return (
//     <SafeAreaView style={styles.container}>
//       <StatusBar barStyle="light-content" backgroundColor="#1F2937" />
      
//       {/* Header */}
//       <LinearGradient colors={['#1F2937', '#111827']} style={styles.header}>
//         <View style={styles.headerContent}>
//           <View>
//             <Text style={styles.headerTitle}>Zerodech Admin</Text>
//             <Text style={styles.headerSubtitle}>Administrator Dashboard</Text>
//           </View>
//           <TouchableOpacity style={styles.notificationButton}>
//             <Ionicons name="notifications" size={20} color="#fff" />
//             <View style={styles.notificationBadge}>
//               <Text style={styles.notificationCount}>
//                 {requests.filter(r => r.status === 'pending').length}
//               </Text>
//             </View>
//           </TouchableOpacity>
//         </View>
//       </LinearGradient>

//       {/* Tab Navigation */}
//       <View style={styles.tabContainer}>
//         <TouchableOpacity
//           style={[
//             styles.tabItem,
//             activeTab === 'subscriptions' && styles.tabItemActive
//           ]}
//           onPress={() => setActiveTab('subscriptions')}
//         >
//           <Ionicons 
//             name="card" 
//             size={16} 
//             color={activeTab === 'subscriptions' ? '#1F2937' : '#6B7280'} 
//           />
//           <Text style={[
//             styles.tabText,
//             activeTab === 'subscriptions' && styles.tabTextActive
//           ]}>
//             Subscription
//           </Text>
//         </TouchableOpacity>

//         <TouchableOpacity
//           style={[
//             styles.tabItem,
//             activeTab === 'requests' && styles.tabItemActive
//           ]}
//           onPress={() => setActiveTab('requests')}
//         >
//           <Ionicons 
//             name="mail" 
//             size={16} 
//             color={activeTab === 'requests' ? '#1F2937' : '#6B7280'} 
//           />
//           <Text style={[
//             styles.tabText,
//             activeTab === 'requests' && styles.tabTextActive
//           ]}>
//             Requests
//           </Text>
//           {requests.filter(r => r.status === 'pending').length > 0 && (
//             <View style={styles.tabBadge}>
//               <Text style={styles.tabBadgeText}>
//                 {requests.filter(r => r.status === 'pending').length}
//               </Text>
//             </View>
//           )}
//         </TouchableOpacity>

//         <TouchableOpacity
//           style={[
//             styles.tabItem,
//             activeTab === 'assignments' && styles.tabItemActive
//           ]}
//           onPress={() => setActiveTab('assignments')}
//         >
//           <Ionicons 
//             name="people" 
//             size={16} 
//             color={activeTab === 'assignments' ? '#1F2937' : '#6B7280'} 
//           />
//           <Text style={[
//             styles.tabText,
//             activeTab === 'assignments' && styles.tabTextActive
//           ]}>
//             Assignment
//           </Text>
//           {unassignedClients.length > 0 && (
//             <View style={styles.tabBadge}>
//               <Text style={styles.tabBadgeText}>
//                 {unassignedClients.length}
//               </Text>
//             </View>
//           )}
//         </TouchableOpacity>
//       </View>

//       {/* Tab Content */}
//       {renderTabContent()}

//       {/* Plan Modal */}
//       <Modal visible={planModal} animationType="slide" transparent>
//         <View style={styles.modalOverlay}>
//           <View style={styles.modalContent}>
//             <View style={styles.modalHeader}>
//               <Text style={styles.modalTitle}>
//                 {selectedPlan ? 'Edit Plan' : 'New Plan'}
//               </Text>
//               <TouchableOpacity onPress={() => setPlanModal(false)}>
//                 <Ionicons name="close" size={24} color="#6B7280" />
//               </TouchableOpacity>
//             </View>

//             <ScrollView style={styles.modalBody}>
//               <View style={styles.inputGroup}>
//                 <Text style={styles.inputLabel}>Plan Name</Text>
//                 <TextInput
//                   style={styles.input}
//                   value={newPlan.name}
//                   onChangeText={(text) => setNewPlan({...newPlan, name: text})}
//                   placeholder="Ex: Premium"
//                 />
//               </View>

//               <View style={styles.inputGroup}>
//                 <Text style={styles.inputLabel}>Price (FCFA)</Text>
//                 <TextInput
//                   style={styles.input}
//                   value={newPlan.price}
//                   onChangeText={(text) => setNewPlan({...newPlan, price: text})}
//                   placeholder="Ex: 12000"
//                   keyboardType="numeric"
//                 />
//               </View>

//               <View style={styles.inputGroup}>
//                 <Text style={styles.inputLabel}>Features</Text>
//                 <View style={styles.featureInput}>
//                   <TextInput
//                     style={[styles.input, { flex: 1 }]}
//                     value={newFeature}
//                     onChangeText={setNewFeature}
//                     placeholder="Add a feature"
//                   />
//                   <TouchableOpacity style={styles.addFeatureButton} onPress={addFeature}>
//                     <Ionicons name="add" size={20} color="#fff" />
//                   </TouchableOpacity>
//                 </View>
                
//                 {newPlan.features.map((feature, index) => (
//                   <View key={index} style={styles.featureTag}>
//                     <Text style={styles.featureTagText}>{feature}</Text>
//                     <TouchableOpacity onPress={() => removeFeature(index)}>
//                       <Ionicons name="close" size={16} color="#6B7280" />
//                     </TouchableOpacity>
//                   </View>
//                 ))}
//               </View>

//               <TouchableOpacity style={styles.saveButton} onPress={savePlan}>
//                 <Text style={styles.saveButtonText}>
//                   {selectedPlan ? 'Update' : 'Create'} Plan
//                 </Text>
//               </TouchableOpacity>
//             </ScrollView>
//           </View>
//         </View>
//       </Modal>

//       {/* Request Modal */}
//       <Modal visible={requestModal} animationType="slide" transparent>
//         <View style={styles.modalOverlay}>
//           <View style={styles.modalContent}>
//             <View style={styles.modalHeader}>
//               <Text style={styles.modalTitle}>Request Details</Text>
//               <TouchableOpacity onPress={() => setRequestModal(false)}>
//                 <Ionicons name="close" size={24} color="#6B7280" />
//               </TouchableOpacity>
//             </View>

//             {selectedRequest && (
//               <View style={styles.modalBody}>
//                 <View style={styles.requestDetailCard}>
//                   <Text style={styles.requestDetailName}>{selectedRequest.clientName}</Text>
//                   <Text style={styles.requestDetailInfo}>📍 {selectedRequest.address}</Text>
//                   <Text style={styles.requestDetailInfo}>📱 {selectedRequest.phone}</Text>
//                   <Text style={styles.requestDetailInfo}>📋 Plan: {selectedRequest.requestedPlan}</Text>
//                   <Text style={styles.requestDetailInfo}>📅 {selectedRequest.requestDate}</Text>
//                   {selectedRequest.notes && (
//                     <Text style={styles.requestDetailNotes}>📝 {selectedRequest.notes}</Text>
//                   )}
//                 </View>

//                 {selectedRequest.status === 'pending' && (
//                   <View style={styles.actionButtons}>
//                     <TouchableOpacity
//                       style={[styles.actionButton, styles.approveButton]}
//                       onPress={() => updateRequestStatus('approved')}
//                     >
//                       <Ionicons name="checkmark-circle" size={20} color="#fff" />
//                       <Text style={styles.actionButtonText}>Approve</Text>
//                     </TouchableOpacity>
                    
//                     <TouchableOpacity
//                       style={[styles.actionButton, styles.rejectButton]}
//                       onPress={() => updateRequestStatus('rejected')}
//                     >
//                       <Ionicons name="close-circle" size={20} color="#fff" />
//                       <Text style={styles.actionButtonText}>Reject</Text>
//                     </TouchableOpacity>
//                   </View>
//                 )}
//               </View>
//             )}
//           </View>
//         </View>
//       </Modal>

//       {/* Assignment Modal */}
//       <Modal visible={assignModal} animationType="slide" transparent>
//         <View style={styles.modalOverlay}>
//           <View style={styles.modalContent}>
//             <View style={styles.modalHeader}>
//               <Text style={styles.modalTitle}>Assign a Collector</Text>
//               <TouchableOpacity onPress={() => setAssignModal(false)}>
//                 <Ionicons name="close" size={24} color="#6B7280" />
//               </TouchableOpacity>
//             </View>

//             {selectedClient && (
//               <View style={styles.modalBody}>
//                 <View style={styles.clientInfoCard}>
//                   <Text style={styles.clientInfoName}>{selectedClient.name}</Text>
//                   <Text style={styles.clientInfoDetail}>📍 {selectedClient.address}</Text>
//                   <Text style={styles.clientInfoDetail}>📋 Plan: {selectedClient.plan}</Text>
//                 </View>

//                 <Text style={styles.collectorsListTitle}>Select a collector:</Text>
                
//                 <ScrollView style={styles.collectorsList}>
//                   {collectors.filter(c => c.status === 'active').map((collector) => (
//                     <TouchableOpacity
//                       key={collector.id}
//                       style={styles.collectorOption}
//                       onPress={() => assignCollector(collector)}
//                     >
//                       <View style={styles.collectorOptionInfo}>
//                         <Text style={styles.collectorOptionName}>{collector.name}</Text>
//                         <Text style={styles.collectorOptionDetails}>
//                           Zone: {collector.zone} • {collector.clients} clients
//                         </Text>
//                         <Text style={styles.collectorOptionEfficiency}>
//                           Efficiency: {collector.efficiency}%
//                         </Text>
//                       </View>
//                       <Ionicons name="chevron-forward" size={20} color="#6B7280" />
//                     </TouchableOpacity>
//                   ))}
//                 </ScrollView>
//               </View>
//             )}
//           </View>
//         </View>
//       </Modal>
//     </SafeAreaView>
//   );
// };

// const styles = StyleSheet.create({
//   container: {
//     flex: 1,
//     backgroundColor: '#F9FAFB',
//   },
//   header: {
//     paddingTop: 10,
//     paddingBottom: 20,
//     paddingHorizontal: 20,
//   },
//   headerContent: {
//     flexDirection: 'row',
//     justifyContent: 'space-between',
//     alignItems: 'center',
//   },
//   headerTitle: {
//     fontSize: 24,
//     fontWeight: 'bold',
//     color: '#fff',
//   },
//   headerSubtitle: {
//     fontSize: 16,
//     color: '#D1D5DB',
//     marginTop: 2,
//   },
//   notificationButton: {
//     position: 'relative',
//     width: 40,
//     height: 40,
//     borderRadius: 20,
//     backgroundColor: 'rgba(255,255,255,0.1)',
//     justifyContent: 'center',
//     alignItems: 'center',
//   },
//   notificationBadge: {
//     position: 'absolute',
//     top: -2,
//     right: -2,
//     width: 18,
//     height: 18,
//     borderRadius: 9,
//     backgroundColor: '#EF4444',
//     justifyContent: 'center',
//     alignItems: 'center',
//   },
//   notificationCount: {
//     fontSize: 10,
//     fontWeight: 'bold',
//     color: '#fff',
//   },
//   tabContainer: {
//     flexDirection: 'row',
//     backgroundColor: '#fff',
//     paddingHorizontal: 20,
//     paddingTop: 16,
//     borderBottomWidth: 1,
//     borderBottomColor: '#E5E7EB',
//   },
//   tabItem: {
//     flex: 1,
//     flexDirection: 'row',
//     alignItems: 'center',
//     justifyContent: 'center',
//     paddingVertical: 12,
//     paddingHorizontal: 8,
//     borderBottomWidth: 2,
//     borderBottomColor: 'transparent',
//     position: 'relative',
//   },
//   tabItemActive: {
//     borderBottomColor: '#1F2937',
//   },
//   tabText: {
//     fontSize: 14,
//     fontWeight: '500',
//     color: '#6B7280',
//     marginLeft: 6,
//   },
//   tabTextActive: {
//     color: '#1F2937',
//     fontWeight: 'bold',
//   },
//   tabBadge: {
//     position: 'absolute',
//     top: 4,
//     right: 4,
//     width: 16,
//     height: 16,
//     borderRadius: 8,
//     backgroundColor: '#EF4444',
//     justifyContent: 'center',
//     alignItems: 'center',
//   },
//     tabBadgeText: {
//     fontSize: 10,
//     fontWeight: 'bold',
//     color: '#fff',
//   },
//   tabContent: {
//     flex: 1,
//     paddingHorizontal: 20,
//     paddingTop: 16,
//   },
//   sectionHeader: {
//     flexDirection: 'row',
//     justifyContent: 'space-between',
//     alignItems: 'center',
//     marginBottom: 12,
//   },
//   sectionTitle: {
//     fontSize: 18,
//     fontWeight: 'bold',
//     color: '#111827',
//   },
//   addButton: {
//     flexDirection: 'row',
//     backgroundColor: '#10B981',
//     paddingHorizontal: 12,
//     paddingVertical: 6,
//     borderRadius: 8,
//     alignItems: 'center',
//   },
//   addButtonText: {
//     color: '#fff',
//     marginLeft: 6,
//     fontWeight: '500',
//   },
//   planCard: {
//     backgroundColor: '#fff',
//     borderRadius: 12,
//     padding: 16,
//     marginBottom: 16,
//     elevation: 2,
//   },
//   popularBadge: {
//     position: 'absolute',
//     top: 10,
//     right: 10,
//     backgroundColor: '#FBBF24',
//     paddingHorizontal: 6,
//     paddingVertical: 2,
//     borderRadius: 4,
//   },
//   popularText: {
//     fontSize: 10,
//     fontWeight: 'bold',
//     color: '#111827',
//   },
//   planHeader: {
//     flexDirection: 'row',
//     justifyContent: 'space-between',
//     alignItems: 'center',
//     marginBottom: 12,
//   },
//   planInfo: {},
//   planName: {
//     fontSize: 16,
//     fontWeight: 'bold',
//     color: '#111827',
//   },
//   planPrice: {
//     fontSize: 14,
//     color: '#6B7280',
//     marginTop: 2,
//   },
//   planDuration: {
//     fontSize: 12,
//     color: '#9CA3AF',
//     marginTop: 2,
//   },
//   editButton: {
//     padding: 6,
//   },
//   planFeatures: {
//     marginVertical: 8,
//   },
//   featureItem: {
//     flexDirection: 'row',
//     alignItems: 'center',
//     marginBottom: 4,
//   },
//   featureText: {
//     marginLeft: 6,
//     fontSize: 12,
//     color: '#374151',
//   },
//   planStats: {
//     marginTop: 8,
//   },
//   statsText: {
//     fontSize: 12,
//     color: '#6B7280',
//   },
//   requestCard: {
//     backgroundColor: '#fff',
//     borderRadius: 12,
//     padding: 16,
//     marginBottom: 16,
//     elevation: 2,
//   },
//   requestHeader: {
//     flexDirection: 'row',
//     justifyContent: 'space-between',
//     alignItems: 'center',
//   },
//   requestInfo: {},
//   requestName: {
//     fontSize: 14,
//     fontWeight: 'bold',
//     color: '#111827',
//   },
//   requestAddress: {
//     fontSize: 12,
//     color: '#6B7280',
//   },
//   requestPhone: {
//     fontSize: 12,
//     color: '#6B7280',
//   },
//   requestStatus: {
//     paddingHorizontal: 10,
//     paddingVertical: 4,
//     borderRadius: 12,
//   },
//   requestStatusText: {
//     fontSize: 12,
//     fontWeight: 'bold',
//     color: '#fff',
    
//   },
//   requestDetails: {
//     marginTop: 8,
//   },
//   requestPlan: {
//     fontSize: 12,
//     color: '#374151',
//   },
//   requestDate: {
//     fontSize: 12,
//     color: '#374151',
//     marginTop: 2,
//   },
//   requestNotes: {
//     fontSize: 12,
//     color: '#4B5563',
//     fontStyle: 'italic',
//     marginTop: 4,
//   },
//   collectorCard: {
//     backgroundColor: '#fff',
//     borderRadius: 12,
//     padding: 16,
//     marginBottom: 16,
//     elevation: 2,
//   },
//   collectorHeader: {
//     flexDirection: 'row',
//     justifyContent: 'space-between',
//   },
//   collectorInfo: {},
//   collectorName: {
//     fontSize: 14,
//     fontWeight: 'bold',
//     color: '#111827',
//   },
//   collectorPhone: {
//     fontSize: 12,
//     color: '#6B7280',
//   },
//   collectorVehicle: {
//     fontSize: 12,
//     color: '#6B7280',
//   },
//   collectorZone: {
//     fontSize: 12,
//     color: '#6B7280',
//   },
//   collectorStats: {
//     alignItems: 'flex-end',
//   },
//   collectorStatus: {
//     paddingHorizontal: 10,
//     paddingVertical: 4,
//     borderRadius: 12,
//     marginBottom: 4,
//   },
//   collectorStatusText: {
//     fontSize: 12,
//     fontWeight: 'bold',
//     color: '#fff',
//   },
//   collectorClients: {
//     fontSize: 12,
//     color: '#374151',
//   },
//   collectorEfficiency: {
//     fontSize: 12,
//     color: '#374151',
//   },
//   unassignedCard: {
//     backgroundColor: '#fff',
//     borderRadius: 12,
//     padding: 16,
//     marginBottom: 16,
//     elevation: 2,
//     flexDirection: 'row',
//     justifyContent: 'space-between',
//     alignItems: 'center',
//   },
//   unassignedInfo: {},
//   unassignedName: {
//     fontSize: 14,
//     fontWeight: 'bold',
//     color: '#111827',
//   },
//   unassignedAddress: {
//     fontSize: 12,
//     color: '#6B7280',
//   },
//   unassignedPlan: {
//     fontSize: 12,
//     color: '#374151',
//   },
//   unassignedPhone: {
//     fontSize: 12,
//     color: '#374151',
//   },
//   assignButton: {
//     flexDirection: 'row',
//     backgroundColor: '#3B82F6',
//     paddingHorizontal: 12,
//     paddingVertical: 6,
//     borderRadius: 8,
//     alignItems: 'center',
//   },
//   assignButtonText: {
//     color: '#fff',
//     marginLeft: 6,
//     fontWeight: '500',
//   },
//   modalOverlay: {
//     flex: 1,
//     backgroundColor: 'rgba(0,0,0,0.3)',
//     justifyContent: 'center',
//     alignItems: 'center',
//     padding: 16,
//   },
//   modalContent: {
//     width: '100%',
//     maxHeight: height * 0.85,
//     height: '55%',
//     backgroundColor: '#fff',
//     borderRadius: 16,
//     padding: 16,

//   },
//   modalHeader: {
//     flexDirection: 'row',
//     justifyContent: 'space-between',
//     alignItems: 'center',
//     marginBottom: 12,
//   },
//   modalTitle: {
//     fontSize: 18,
//     fontWeight: 'bold',
//     color: '#111827',

//   },
//   modalBody: {
//     flex: 1,
//   },
//   inputGroup: {
//     marginBottom: 12,
//   },
//   inputLabel: {
//     fontSize: 12,
//     color: '#374151',
//     fontWeight: '500',
//     marginBottom: 4,
//   },
//   input: {
//     backgroundColor: '#F3F4F6',
//     borderRadius: 8,
//     paddingHorizontal: 10,
//     paddingVertical: 8,
//     fontSize: 14,
//     color: '#111827',
//   },
//   featureInput: {
//     flexDirection: 'row',
//     alignItems: 'center',
//   },
//   addFeatureButton: {
//     backgroundColor: '#10B981',
//     padding: 8,
//     borderRadius: 8,
//     marginLeft: 6,
//   },
//   featureTag: {
//     flexDirection: 'row',
//     alignItems: 'center',
//     backgroundColor: '#E5E7EB',
//     borderRadius: 12,
//     paddingHorizontal: 8,
//     paddingVertical: 4,
//     marginTop: 4,
//   },
// featureTagText: {
//     fontSize: 12,
//     color: '#111827',
//     marginRight: 6,
//   },
//   saveButton: {
//     marginTop: 16,
//     backgroundColor: '#10B981',
//     paddingVertical: 12,
//     borderRadius: 12,
//     alignItems: 'center',
//   },
//   saveButtonText: {
//     color: '#fff',
//     fontSize: 14,
//     fontWeight: 'bold',
//   },
//   actionButtons: {
//     flexDirection: 'row',
//     justifyContent: 'space-around',
//     marginTop: 12,
//   },
//   actionButton: {
//     flexDirection: 'row',
//     alignItems: 'center',
//     paddingHorizontal: 12,
//     paddingVertical: 8,
//     borderRadius: 8,
//   },
//   approveButton: {
//     backgroundColor: '#10B981',
//   },
//   rejectButton: {
//     backgroundColor: '#EF4444',
//   },
//   actionButtonText: {
//     color: '#fff',
//     marginLeft: 6,
//     fontWeight: '500',
//   },
//   requestDetailCard: {
//     backgroundColor: '#F3F4F6',
//     borderRadius: 12,
//     padding: 16,
//   },
//   requestDetailName: {
//     fontSize: 16,
//     fontWeight: 'bold',
//     color: '#111827',
//     marginBottom: 4,
//   },
//   requestDetailInfo: {
//     fontSize: 12,
//     color: '#374151',
//     marginBottom: 2,
//   },
//   requestDetailNotes: {
//     fontSize: 12,
//     color: '#4B5563',
//     fontStyle: 'italic',
//     marginTop: 4,
//   },
//   clientInfoCard: {
//     backgroundColor: '#F3F4F6',
//     borderRadius: 12,
//     padding: 16,
//     marginBottom: 12,
//   },
//   clientInfoName: {
//     fontSize: 16,
//     fontWeight: 'bold',
//     color: '#111827',
//     marginBottom: 2,
//   },
//   clientInfoDetail: {
//     fontSize: 12,
//     color: '#374151',
//   },
//   collectorsListTitle: {
//     fontSize: 14,
//     fontWeight: '500',
//     color: '#111827',
//     marginBottom: 8,
//     marginTop: 12,
//   },
//   collectorsList: {
//     maxHeight: height * 0.4,
//   },
//   collectorOption: {
//     flexDirection: 'row',
//     justifyContent: 'space-between',
//     alignItems: 'center',
//     backgroundColor: '#F9FAFB',
//     borderRadius: 12,
//     padding: 12,
//     marginBottom: 8,
//     elevation: 1,
//   },
//   collectorOptionInfo: {},
//   collectorOptionName: {
//     fontSize: 14,
//     fontWeight: 'bold',
//     color: '#111827',
//   },
//   collectorOptionDetails: {
//     fontSize: 12,
//     color: '#6B7280',
//   },
//   collectorOptionEfficiency: {
//     fontSize: 12,
//     color: '#374151',
//   },
// });

// export default AdminDashboard;


// // HomeDashboard.tsx
// import React, { useState } from 'react';
// import { 
//   View, 
//   Text, 
//   StyleSheet, 
//   ScrollView, 
//   TouchableOpacity, 
//   Dimensions,
//   StatusBar,
//   Animated
// } from 'react-native';
// import { LinearGradient } from 'expo-linear-gradient';
// import { MaterialCommunityIcons, FontAwesome5, Ionicons } from '@expo/vector-icons';
// import { useRouter } from 'expo-router';

// const { width, height } = Dimensions.get('window');

// export default function Home() {
//   const router = useRouter();
//   const [scrollY] = useState(new Animated.Value(0));

//   // Mock user data - replace with real user state later
//   const user = {
//     name: "John",
//     currentPlan: "Standard",
//     bucketSize: "40L",
//     collectionsPerWeek: 3,
//     nextPickup: "Tomorrow, 8:00 AM",
//     bucketFillLevel: 70,
//     monthlyStats: {
//       pickups: 12,
//       wasteCollected: "480L",
//       amountPaid: "8,000 FCFA"
//     }
//   };

//   const handleSubscribe = () => {
//     router.push('/SubscriptionPlan');
//   };

//   const handleQuickAction = (action) => {
//     console.log(`${action} pressed`);
//     // Navigate to respective screens later
//   };

//   return (
//     <View style={styles.container}>
//       <StatusBar barStyle="light-content" backgroundColor="#1B5E20" />
      
//       <ScrollView
//         showsVerticalScrollIndicator={false}
//         scrollEventThrottle={16}
//         onScroll={Animated.event(
//           [{ nativeEvent: { contentOffset: { y: scrollY } } }],
//           { useNativeDriver: false }
//         )}
//       >
//         {/* Hero Header with Gradient */}
//         <LinearGradient
//           colors={['#1B5E20', '#2E7D32', '#4CAF50']}
//           start={{ x: 0, y: 0 }}
//           end={{ x: 1, y: 1 }}
//           style={styles.heroSection}
//         >
//           {/* App Logo */}
//           <View style={styles.logoContainer}>
//             <View style={styles.logoCircle}>
//               <Text style={styles.logoEmoji}>♻️</Text>
//             </View>
//           </View>
          
//           {/* App Title */}
//           <Text style={styles.appTitle}>Zerodech</Text>
//           <Text style={styles.appSubtitle}>Smart Waste Management for Cameroon</Text>
          
//           {/* Floating Decorative Elements */}
//           <View style={[styles.floatingCircle, { top: 60, left: 30 }]} />
//           <View style={[styles.floatingCircle, { top: 100, right: 40, width: 40, height: 40 }]} />
//           <View style={[styles.floatingCircle, { top: 180, left: 60, width: 25, height: 25 }]} />
//         </LinearGradient>

//         {/* User Greeting Card */}
//         <View style={styles.greetingCard}>
//           <View style={styles.greetingContent}>
//             <View style={styles.avatarContainer}>
//               <Text style={styles.avatarEmoji}>👋</Text>
//             </View>
//             <View style={styles.greetingText}>
//               <Text style={styles.greetingTitle}>Hello, {user.name}!</Text>
//               <Text style={styles.greetingSubtitle}>Welcome back to your clean community</Text>
//             </View>
//             <View style={styles.statusBadge}>
//               <Text style={styles.statusText}>Active</Text>
//             </View>
//           </View>
//         </View>

//         {/* Quick Actions */}
//         <View style={styles.section}>
//           <Text style={styles.sectionTitle}>Quick Actions</Text>
//           <View style={styles.quickActions}>
//             <TouchableOpacity 
//               style={[styles.actionCard, styles.scheduleCard]} 
//               onPress={() => handleQuickAction('schedule')}
//             >
//               <View style={[styles.actionIcon, { backgroundColor: '#4CAF50' }]}>
//                 <MaterialCommunityIcons name="calendar-clock" size={24} color="white" />
//               </View>
//               <Text style={[styles.actionTitle, { color: '#2E7D32' }]}>Schedule</Text>
//               <Text style={[styles.actionSubtitle, { color: '#2E7D32' }]}>Pickup</Text>
//             </TouchableOpacity>

//             <TouchableOpacity 
//               style={[styles.actionCard, styles.trackCard]} 
//               onPress={() => handleQuickAction('track')}
//             >
//               <View style={[styles.actionIcon, { backgroundColor: '#2196F3' }]}>
//                 <MaterialCommunityIcons name="map-marker-radius" size={24} color="white" />
//               </View>
//               <Text style={[styles.actionTitle, { color: '#1976D2' }]}>Track</Text>
//               <Text style={[styles.actionSubtitle, { color: '#1976D2' }]}>Collector</Text>
//             </TouchableOpacity>

//             <TouchableOpacity 
//               style={[styles.actionCard, styles.paymentCard]} 
//               onPress={() => handleQuickAction('payment')}
//             >
//               <View style={[styles.actionIcon, { backgroundColor: '#FF9800' }]}>
//                 <FontAwesome5 name="money-bill-wave" size={20} color="white" />
//               </View>
//               <Text style={[styles.actionTitle, { color: '#F57C00' }]}>Payment</Text>
//               <Text style={[styles.actionSubtitle, { color: '#F57C00' }]}>History</Text>
//             </TouchableOpacity>
//           </View>
//         </View>

//         {/* Current Subscription Status */}
//         <View style={styles.section}>
//           <View style={styles.subscriptionCard}>
//             <View style={styles.subscriptionHeader}>
//               <Text style={styles.subscriptionTitle}>Your Current Plan</Text>
//               <View style={styles.planBadge}>
//                 <Text style={styles.planBadgeText}>{user.currentPlan.toUpperCase()}</Text>
//               </View>
//             </View>
            
//             <Text style={styles.planDetails}>
//               {user.bucketSize} bucket • {user.collectionsPerWeek} collections/week
//             </Text>
//             <Text style={styles.nextPickup}>Next pickup: {user.nextPickup}</Text>
            
//             {/* Bucket Fill Level */}
//             <View style={styles.bucketStatus}>
//               <Text style={styles.bucketLabel}>Bucket Status</Text>
//               <View style={styles.progressBar}>
//                 <View style={[styles.progressFill, { width: `${user.bucketFillLevel}%` }]} />
//               </View>
//               <Text style={styles.fillPercentage}>{user.bucketFillLevel}% Full</Text>
//             </View>
//           </View>
//         </View>

//         {/* Main CTA Button */}
//         <TouchableOpacity style={styles.mainCTA} onPress={handleSubscribe}>
//           <LinearGradient
//             colors={['#4CAF50', '#2E7D32']}
//             start={{ x: 0, y: 0 }}
//             end={{ x: 1, y: 0 }}
//             style={styles.ctaGradient}
//           >
//             <Text style={styles.ctaText}>Upgrade Plan or Subscribe</Text>
//             <Ionicons name="arrow-forward" size={20} color="white" />
//           </LinearGradient>
//         </TouchableOpacity>

//         {/* Monthly Statistics */}
//         <View style={styles.section}>
//           <Text style={styles.sectionTitle}>This Month</Text>
//           <View style={styles.statsRow}>
//             <View style={[styles.statCard, styles.pickupStat]}>
//               <Text style={styles.statNumber}>{user.monthlyStats.pickups}</Text>
//               <Text style={styles.statLabel}>Pickups</Text>
//             </View>
//             <View style={[styles.statCard, styles.wasteStat]}>
//               <Text style={styles.statNumber}>{user.monthlyStats.wasteCollected}</Text>
//               <Text style={styles.statLabel}>Collected</Text>
//             </View>
//             <View style={[styles.statCard, styles.costStat]}>
//               <Text style={styles.statNumber}>{user.monthlyStats.amountPaid}</Text>
//               <Text style={styles.statLabel}>Spent</Text>
//             </View>
//           </View>
//         </View>

//         {/* Bottom Spacing */}
//         <View style={{ height: 40 }} />
//       </ScrollView>
//     </View>
//   );
// }

// const styles = StyleSheet.create({
//   container: {
//     flex: 1,
//     backgroundColor: '#f8f9fa',
//   },
//   heroSection: {
//     height: 280,
//     paddingTop: 60,
//     alignItems: 'center',
//     position: 'relative',
//     overflow: 'hidden',
//   },
//   logoContainer: {
//     marginBottom: 20,
//   },
//   logoCircle: {
//     width: 80,
//     height: 80,
//     borderRadius: 40,
//     backgroundColor: 'white',
//     justifyContent: 'center',
//     alignItems: 'center',
//     shadowColor: '#000',
//     shadowOffset: { width: 0, height: 8 },
//     shadowOpacity: 0.3,
//     shadowRadius: 10,
//     elevation: 15,
//   },
//   logoEmoji: {
//     fontSize: 40,
//   },
//   appTitle: {
//     fontSize: 36,
//     fontWeight: '900',
//     color: 'white',
//     marginBottom: 8,
//     textShadowColor: 'rgba(0, 0, 0, 0.3)',
//     textShadowOffset: { width: 0, height: 2 },
//     textShadowRadius: 4,
//   },
//   appSubtitle: {
//     fontSize: 16,
//     color: 'white',
//     opacity: 0.95,
//     textAlign: 'center',
//   },
//   floatingCircle: {
//     position: 'absolute',
//     width: 30,
//     height: 30,
//     borderRadius: 15,
//     backgroundColor: 'white',
//     opacity: 0.1,
//   },
//   greetingCard: {
//     marginHorizontal: 20,
//     marginTop: -40,
//     backgroundColor: 'white',
//     borderRadius: 20,
//     padding: 20,
//     shadowColor: '#000',
//     shadowOffset: { width: 0, height: 4 },
//     shadowOpacity: 0.1,
//     shadowRadius: 8,
//     elevation: 8,
//   },
//   greetingContent: {
//     flexDirection: 'row',
//     alignItems: 'center',
//   },
//   avatarContainer: {
//     width: 50,
//     height: 50,
//     borderRadius: 25,
//     backgroundColor: '#E8F5E8',
//     justifyContent: 'center',
//     alignItems: 'center',
//     marginRight: 15,
//   },
//   avatarEmoji: {
//     fontSize: 24,
//   },
//   greetingText: {
//     flex: 1,
//   },
//   greetingTitle: {
//     fontSize: 20,
//     fontWeight: '700',
//     color: '#333',
//     marginBottom: 4,
//   },
//   greetingSubtitle: {
//     fontSize: 14,
//     color: '#666',
//   },
//   statusBadge: {
//     backgroundColor: '#4CAF50',
//     paddingHorizontal: 12,
//     paddingVertical: 6,
//     borderRadius: 12,
//   },
//   statusText: {
//     color: 'white',
//     fontSize: 12,
//     fontWeight: '600',
//   },
//   section: {
//     marginHorizontal: 20,
//     marginTop: 30,
//   },
//   sectionTitle: {
//     fontSize: 22,
//     fontWeight: '700',
//     color: '#333',
//     marginBottom: 15,
//   },
//   quickActions: {
//     flexDirection: 'row',
//     justifyContent: 'space-between',
//   },
//   actionCard: {
//     width: (width - 60) / 3,
//     height: 100,
//     borderRadius: 16,
//     padding: 15,
//     alignItems: 'center',
//     justifyContent: 'center',
//   },
//   scheduleCard: {
//     backgroundColor: '#E8F5E8',
//   },
//   trackCard: {
//     backgroundColor: '#E3F2FD',
//   },
//   paymentCard: {
//     backgroundColor: '#FFF3E0',
//   },
//   actionIcon: {
//     width: 40,
//     height: 40,
//     borderRadius: 20,
//     justifyContent: 'center',
//     alignItems: 'center',
//     marginBottom: 8,
//   },
//   actionTitle: {
//     fontSize: 13,
//     fontWeight: '600',
//     textAlign: 'center',
//   },
//   actionSubtitle: {
//     fontSize: 13,
//     fontWeight: '600',
//     textAlign: 'center',
//   },
//   subscriptionCard: {
//     backgroundColor: 'white',
//     borderRadius: 20,
//     padding: 20,
//     borderWidth: 2,
//     borderColor: '#E8F5E8',
//     shadowColor: '#000',
//     shadowOffset: { width: 0, height: 2 },
//     shadowOpacity: 0.05,
//     shadowRadius: 8,
//     elevation: 3,
//   },
//   subscriptionHeader: {
//     flexDirection: 'row',
//     justifyContent: 'space-between',
//     alignItems: 'center',
//     marginBottom: 15,
//   },
//   subscriptionTitle: {
//     fontSize: 20,
//     fontWeight: '700',
//     color: '#333',
//   },
//   planBadge: {
//     backgroundColor: '#E8F5E8',
//     paddingHorizontal: 15,
//     paddingVertical: 8,
//     borderRadius: 15,
//   },
//   planBadgeText: {
//     fontSize: 12,
//     fontWeight: '600',
//     color: '#2E7D32',
//   },
//   planDetails: {
//     fontSize: 14,
//     color: '#666',
//     marginBottom: 8,
//   },
//   nextPickup: {
//     fontSize: 14,
//     color: '#666',
//     marginBottom: 20,
//   },
//   bucketStatus: {
//     marginTop: 10,
//   },
//   bucketLabel: {
//     fontSize: 14,
//     fontWeight: '600',
//     color: '#333',
//     marginBottom: 8,
//   },
//   progressBar: {
//     height: 8,
//     backgroundColor: '#E0E0E0',
//     borderRadius: 4,
//     overflow: 'hidden',
//     marginBottom: 8,
//   },
//   progressFill: {
//     height: '100%',
//     backgroundColor: '#4CAF50',
//     borderRadius: 4,
//   },
//   fillPercentage: {
//     fontSize: 12,
//     fontWeight: '600',
//     color: '#4CAF50',
//     textAlign: 'right',
//   },
//   mainCTA: {
//     marginHorizontal: 20,
//     marginTop: 25,
//     borderRadius: 28,
//     shadowColor: '#4CAF50',
//     shadowOffset: { width: 0, height: 4 },
//     shadowOpacity: 0.3,
//     shadowRadius: 8,
//     elevation: 8,
//   },
//   ctaGradient: {
//     flexDirection: 'row',
//     alignItems: 'center',
//     justifyContent: 'center',
//     paddingVertical: 18,
//     paddingHorizontal: 30,
//     borderRadius: 28,
//   },
//   ctaText: {
//     fontSize: 18,
//     fontWeight: '700',
//     color: 'white',
//     marginRight: 10,
//   },
//   statsRow: {
//     flexDirection: 'row',
//     justifyContent: 'space-between',
//   },
//   statCard: {
//     flex: 1,
//     padding: 15,
//     borderRadius: 12,
//     marginHorizontal: 5,
//     alignItems: 'center',
//   },
//   pickupStat: {
//     backgroundColor: '#E8F5E8',
//   },
//   wasteStat: {
//     backgroundColor: '#E3F2FD',
//   },
//   costStat: {
//     backgroundColor: '#FFF3E0',
//   },
//   statNumber: {
//     fontSize: 18,
//     fontWeight: '700',
//     color: '#333',
//     marginBottom: 5,
//   },
//   statLabel: {
//     fontSize: 12,
//     color: '#666',
//     textAlign: 'center',
//   },
// });